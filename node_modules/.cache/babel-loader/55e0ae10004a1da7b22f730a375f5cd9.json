{"ast":null,"code":"export default function sketch(p) {\n  let canvasObj;\n\n  p.setup = () => {\n    canvasObj = p.createCanvas(550, 300);\n  };\n\n  p.draw = () => {};\n\n  p.mouseDragged = () => {\n    p.stroke(0);\n    p.strokeWeight(3);\n    p.line(p.mouseX, p.mouseY, p.pmouseX, p.pmouseY);\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = props => {\n    if (props.evaluate) {\n      if (canvasObj) {\n        canvasObj.loadPixels();\n        let data = canvasObj.canvas.toDataURL();\n        props.callBack(data);\n      }\n    }\n\n    if (props.color) {\n      p.background(255);\n    }\n  };\n}","map":{"version":3,"sources":["/Users/satvikmehra/Downloads/Handwritten Equation/src/sketches/sketch.js"],"names":["sketch","p","canvasObj","setup","createCanvas","draw","mouseDragged","stroke","strokeWeight","line","mouseX","mouseY","pmouseX","pmouseY","myCustomRedrawAccordingToNewPropsHandler","props","evaluate","loadPixels","data","canvas","toDataURL","callBack","color","background"],"mappings":"AAAA,eAAe,SAASA,MAAT,CAAgBC,CAAhB,EAAkB;AAC7B,MAAIC,SAAJ;;AAEAD,EAAAA,CAAC,CAACE,KAAF,GAAU,MAAM;AACZD,IAAAA,SAAS,GAAGD,CAAC,CAACG,YAAF,CAAe,GAAf,EAAoB,GAApB,CAAZ;AACH,GAFD;;AAIAH,EAAAA,CAAC,CAACI,IAAF,GAAS,MAAM,CAAE,CAAjB;;AAEAJ,EAAAA,CAAC,CAACK,YAAF,GAAiB,MAAM;AACnBL,IAAAA,CAAC,CAACM,MAAF,CAAS,CAAT;AACAN,IAAAA,CAAC,CAACO,YAAF,CAAe,CAAf;AACAP,IAAAA,CAAC,CAACQ,IAAF,CAAOR,CAAC,CAACS,MAAT,EAAiBT,CAAC,CAACU,MAAnB,EAA2BV,CAAC,CAACW,OAA7B,EAAsCX,CAAC,CAACY,OAAxC;AACH,GAJD;;AAMAZ,EAAAA,CAAC,CAACa,wCAAF,GAA8CC,KAAD,IAAW;AACpD,QAAGA,KAAK,CAACC,QAAT,EAAmB;AACf,UAAGd,SAAH,EAAc;AACVA,QAAAA,SAAS,CAACe,UAAV;AACA,YAAIC,IAAI,GAAGhB,SAAS,CAACiB,MAAV,CAAiBC,SAAjB,EAAX;AACAL,QAAAA,KAAK,CAACM,QAAN,CAAeH,IAAf;AACH;AACJ;;AACD,QAAGH,KAAK,CAACO,KAAT,EAAe;AACXrB,MAAAA,CAAC,CAACsB,UAAF,CAAa,GAAb;AACH;AACJ,GAXD;AAYH","sourcesContent":["export default function sketch(p){\n    let canvasObj;\n    \n    p.setup = () => {\n        canvasObj = p.createCanvas(550, 300);\n    }\n\n    p.draw = () => {}\n\n    p.mouseDragged = () => {\n        p.stroke(0);\n        p.strokeWeight(3);\n        p.line(p.mouseX, p.mouseY, p.pmouseX, p.pmouseY);\n    }\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (props) => {\n        if(props.evaluate) {\n            if(canvasObj) {\n                canvasObj.loadPixels();\n                let data = canvasObj.canvas.toDataURL();\n                props.callBack(data);\n            }\n        }\n        if(props.color){\n            p.background(255);\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}