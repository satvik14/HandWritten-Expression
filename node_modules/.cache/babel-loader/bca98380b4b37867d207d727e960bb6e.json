{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/satvikmehra/Downloads/Handwritten Equation/src/UploadButton.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, Image, Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nlet imgBase64 = '';\n\nclass UploadButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateFile = event => {\n      let extension = event.target.files[0].name.substring(event.target.files[0].name.lastIndexOf('.') + 1).toLowerCase();\n      let img = '';\n\n      if (extension === 'jpg' || extension === 'png' || extension === 'jpeg') {\n        img = URL.createObjectURL(event.target.files[0]);\n        let file = event.target.files[0];\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n          imgBase64 = reader.result;\n          this.setState(Object.assign(this.state, {\n            uploadState: false,\n            imgUrl: img,\n            uploadError: false,\n            showModal: true\n          }));\n          console.log(this.state.imgBase64);\n          console.log('RESULT', reader.result);\n        };\n\n        reader.readAsDataURL(file);\n      } else {\n        imgBase64 = '';\n        this.setState(Object.assign(this.state, {\n          uploadState: true,\n          imgUrl: '',\n          uploadError: true,\n          showModal: true\n        }));\n      }\n    };\n\n    this.handleClose = () => {\n      this.setState(Object.assign(this.state, {\n        showModal: false\n      }));\n    };\n\n    this.modalBody = () => {\n      if (!this.state.uploadError) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            alt: \"selected image\",\n            src: this.state.imgUrl,\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: \"The selected file is not an image. Please select an image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.state = {\n      uploadState: true,\n      imgUrl: '',\n      uploadError: false,\n      showModal: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.validateFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          disabled: this.state.uploadState,\n          onClick: () => this.props.sendImgToServer(imgBase64),\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.showModal,\n        onHide: this.handleClose,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: this.state.uploadError ? \"Error in extension\" : \"Preview of selected image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: this.modalBody()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: this.handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UploadButton;","map":{"version":3,"sources":["/Users/satvikmehra/Downloads/Handwritten Equation/src/UploadButton.js"],"names":["React","Component","Button","Modal","Image","Alert","imgBase64","UploadButton","constructor","props","validateFile","event","extension","target","files","name","substring","lastIndexOf","toLowerCase","img","URL","createObjectURL","file","reader","FileReader","onloadend","result","setState","Object","assign","state","uploadState","imgUrl","uploadError","showModal","console","log","readAsDataURL","handleClose","modalBody","render","sendImgToServer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Button,Modal,Image,Alert} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nlet imgBase64 = '';\n\nclass UploadButton extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            uploadState: true,\n            imgUrl: '',\n            uploadError: false,\n            showModal: false\n        };\n    }\n\n    validateFile = (event) => {\n        let extension = event.target.files[0].name.substring(event.target.files[0].name.lastIndexOf('.')+1).toLowerCase();\n        let img = '';\n        if(extension === 'jpg' || extension === 'png' || extension === 'jpeg'){\n            img = URL.createObjectURL(event.target.files[0]);\n            let file = event.target.files[0];\n            let reader = new FileReader();\n            reader.onloadend = () => {\n                imgBase64 = reader.result;\n                this.setState(Object.assign(this.state,{\n                    uploadState:false,\n                    imgUrl:img,\n                    uploadError: false,\n                    showModal: true\n                }));\n                console.log(this.state.imgBase64);\n                console.log('RESULT', reader.result);\n            }\n            reader.readAsDataURL(file);\n        }\n        else {\n            imgBase64 = '';\n            this.setState(Object.assign(this.state,{\n                uploadState:true,\n                imgUrl:'',\n                uploadError: true,\n                showModal: true\n            }));\n        }\n    }\n\n    handleClose = () => {\n        this.setState(Object.assign(this.state,{showModal:false}));\n    }\n\n    modalBody = () => {\n        if(!this.state.uploadError) {\n            return (\n                <div>\n                    <Image alt=\"selected image\" src={this.state.imgUrl} fluid/>\n                </div>\n            );\n        }\n        else{\n            return(\n                <div>\n                    <Alert variant=\"danger\">\n                        The selected file is not an image. Please select an image\n                    </Alert>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div> \n                    <input type=\"file\" onChange={this.validateFile} /> \n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary\" \n                        disabled={this.state.uploadState}\n                        onClick={() => this.props.sendImgToServer(imgBase64)}> \n                      Upload! \n                    </button> \n                </div>\n                <Modal \n                    show={this.state.showModal}\n                    onHide={this.handleClose}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            {this.state.uploadError? \"Error in extension\": \"Preview of selected image\"}\n                        </Modal.Title>\n                    </Modal.Header>\n                        <Modal.Body>\n                            {this.modalBody()}\n                        </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default UploadButton;"]},"metadata":{},"sourceType":"module"}