{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/satvikmehra/Downloads/Handwritten Equation/src/Canvas.js\";\nimport React, { Component } from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport sketch from './sketches/sketch';\nimport UploadButton from './UploadButton';\nimport Output from './Output';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nlet savedImage = '';\n\nclass Canvas extends Component {\n  constructor() {\n    super();\n\n    this.pseudo = data => {\n      savedImage = data;\n    };\n\n    this.sendImgToServer = image => {\n      console.log(\"req:\", image);\n      let img = image.replace(\"data:image/png;base64,\", \"\");\n      let data = {};\n      data.image = img;\n      fetch('http://127.0.0.1:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        let data1 = JSON.parse(data);\n        console.log('Success:', data1);\n        this.setState({\n          color: false,\n          evaluate: false,\n          equation: data1['Entered_equation'],\n          formatted_equation: data1['Formatted_equation'],\n          result: data1['solution']\n        });\n        console.log(this.state);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    };\n\n    this.onClear = () => {\n      this.setState({\n        color: true,\n        evaluate: false,\n        equation: '',\n        formatted_equation: '',\n        result: ''\n      });\n    };\n\n    this.onEval = () => {\n      this.setState({\n        color: false,\n        evaluate: true,\n        equation: '',\n        formatted_equation: '',\n        result: ''\n      });\n    };\n\n    this.state = {\n      color: false,\n      evaluate: false,\n      equation: '',\n      formatted_equation: '',\n      result: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-12 col-md-6 offset-md-2\",\n          children: \"Draw the equation below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6 border border-dark offset-md-2\",\n          children: /*#__PURE__*/_jsxDEV(P5Wrapper, {\n            sketch: sketch,\n            color: this.state.color,\n            evaluate: this.state.evaluate,\n            callBack: this.pseudo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 col-md-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: this.state.evaluate ? () => this.sendImgToServer(savedImage) : this.onEval,\n                className: \"btn btn-primary btn-block \",\n                children: this.state.evaluate ? \"Evaluate\" : \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: this.onClear,\n                className: \"btn btn-danger btn-block \",\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"offset-md-3\",\n          children: /*#__PURE__*/_jsxDEV(UploadButton, {\n            sendImgToServer: this.sendImgToServer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Output, {\n        equation: this.state.equation,\n        formatted_equation: this.state.formatted_equation,\n        result: this.state.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/satvikmehra/Downloads/Handwritten Equation/src/Canvas.js"],"names":["React","Component","P5Wrapper","sketch","UploadButton","Output","savedImage","Canvas","constructor","pseudo","data","sendImgToServer","image","console","log","img","replace","fetch","method","headers","body","JSON","stringify","then","response","json","data1","parse","setState","color","evaluate","equation","formatted_equation","result","state","catch","error","onClear","onEval","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport sketch from './sketches/sketch';\nimport UploadButton from './UploadButton';\nimport Output from './Output';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nlet savedImage = '';\n\nclass Canvas extends Component {\n    constructor(){\n      super();\n      this.state = {\n        color: false,\n        evaluate: false,\n        equation: '',\n        formatted_equation: '',\n        result: '' \n      };\n    }\n\n    pseudo = (data) => {\n      savedImage = data;\n    }\n    \n    sendImgToServer = (image) => {\n      console.log(\"req:\",image);\n      let img = image.replace(\"data:image/png;base64,\",\"\");\n\n      let data = {};\n      data.image = img;\n\n      fetch('http://127.0.0.1:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n      .then(response => response.json())\n      .then(data => {\n        let data1 = JSON.parse(data);\n        console.log('Success:', data1);\n        this.setState(\n          {\n            color: false,\n            evaluate: false,\n            equation: data1['Entered_equation'],\n            formatted_equation: data1['Formatted_equation'],\n            result: data1['solution']\n          }\n        );\n        console.log(this.state);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n    }\n\n    onClear = () => {\n      this.setState({\n        color: true,\n        evaluate: false,\n        equation: '',\n        formatted_equation: '',\n        result: ''\n      });\n    }\n\n    onEval = () => {\n      this.setState({\n        color: false, \n        evaluate:true,\n        equation: '',\n        formatted_equation: '',\n        result: ''\n      });\n    }\n\n    render() {\n      return (\n        <div className=\"container \">\n          <br/>\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-6 offset-md-2\">\n              Draw the equation below\n            </div>\n          </div>\n          <br/>\n          <div className=\"row align-items-center\">\n            <div className=\"col-12 col-md-6 border border-dark offset-md-2\">\n              <P5Wrapper sketch={sketch} \n                color={this.state.color} \n                evaluate={this.state.evaluate}\n                callBack={this.pseudo}>\n              </P5Wrapper>\n            </div>\n            <div className=\"col-6 col-md-2\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button \n                    type=\"button\" \n                    onClick={this.state.evaluate? () => this.sendImgToServer(savedImage): this.onEval}\n                    className=\"btn btn-primary btn-block \"\n                    >\n                    {this.state.evaluate? \"Evaluate\":\"Save\"}\n                  </button>\n                </div>\n              </div>\n              <br/>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <button \n                    type=\"button\" \n                    onClick={this.onClear} \n                    className=\"btn btn-danger btn-block \"\n                    >\n                    Clear\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <br/><br/>\n          <div className=\"row\">\n            <div className=\"offset-md-3\">\n              <UploadButton sendImgToServer={this.sendImgToServer} />\n            </div>\n          </div>\n          <br/><br/>\n          <Output \n            equation={this.state.equation} \n            formatted_equation={this.state.formatted_equation}\n            result={this.state.result}\n          />\n        </div>\n      );\n    }\n}\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}